import React, { useState } from 'react';
import axios from 'axios';
import './css/login.css';

// API URL-i .env fa√Ωlyndan al√Ωar.
const API_URL = import.meta.env.VITE_API_URL;

/**
 * Giri≈ü (Login) komponenti.
 * @param {function} onLogin - √úst√ºnlikli giri≈üden so≈à √ßagyryljak funksi√Ωa.
 */
function Login({ onLogin }) {
    // ‚¨áÔ∏è State-ler: Ulanyjy maglumatlaryny saklamak √º√ßin.
    const [role, setRole] = useState('');
    const [username, setUsername] = useState('');
    const [surname, setLastName] = useState('');
    const [password, setPassword] = useState('');
    const [group_number, setGroup] = useState('');
    const [status, setStatus] = useState('');
    const [showPassword, setShowPassword] = useState(false);

    // ‚ùóÔ∏è T√§ze: D√ºwme √º√ßin G√ñNI CSS (Inline Style)
    // D√ºwme indi inputy≈à a≈üagynda bolany √º√ßin, position: 'absolute' gerek d√§l.
    const togglePasswordStyle = {
        backgroundColor: 'transparent',
        border: 'none',
        color: '#6b7280',      // Re≈àki
        cursor: 'pointer',
        padding: '1px 0',      // √ùokarsynda we a≈üagynda azajyk bo≈üluk
        fontSize: '14px',      // Teksti≈à ululygy
        textAlign: 'left',     // Sol tarapa de≈àlemek
        width: '100%',         // B√ºt√ºn gi≈àligi e√Ωelemek
        display: 'block',      // Blok element etmek
        marginBottom: '2px'   // A≈üagynda biraz bo≈üluk go√Ωmak
    };

    /**
     * Rol √º√Ωtgedilende be√Ωleki me√Ωdanlary arassala√Ωar.
     * @param {string} newRole - T√§ze rol ('student' √Ωa-da 'teacher').
     */
    const handleRoleChange = (newRole) => {
        setRole(newRole);
        setUsername('');
        setLastName('');
        setPassword('');
        setGroup('');
        setStatus('');
    };

    /**
     * Paroly g√∂rkezmek/gizlemek funksi√Ωasy.
     */
    const togglePasswordVisibility = () => {
        setShowPassword(!showPassword);
    };

    /**
     * Giri≈ü amallaryny dolandyr√Ωan esasy funksi√Ωa.
     */
    const handleLogin = async () => {
        // Bo≈ü me√Ωdanlary barlamak
        if (!role || !username || !surname || !password || (role === 'student' && !group_number)) {
            setStatus('Bo≈ü √Ωerleri doldury≈à!');
            return;
        }

        try {
            // 1. JWT Token almak √º√ßin serwere √ßagyry≈ü
            const tokenRes = await axios.post(`${API_URL}/api/token/`, {
                username,
                surname,
                password,
            });

            const { access, refresh } = tokenRes.data;
            localStorage.setItem("access", access);
            localStorage.setItem("refresh", refresh);

            const axiosConfig = {
                headers: { Authorization: `Bearer ${access}` },
            };

            // 2. Ulanyjyny≈à maglumatlaryny almak
            const userRes = await axios.get(`${API_URL}/api/user/`, axiosConfig);
            const foundUser = userRes.data;

            // 3. Alnan ulanyjy maglumatlaryny (Rol, Famili√Ωa, Topar) barlamak
            if (
                foundUser.role === role &&
                foundUser.surname === surname &&
                (role === 'teacher' || foundUser.group_number === group_number)
            ) {
                // Mugallym adyny √Ωatda saklamak
                if (foundUser.role === 'teacher') {
                    localStorage.setItem("mugallymName", foundUser.username || foundUser.name);
                    localStorage.setItem("mugallymSurname", foundUser.surname);
                }

                setStatus('Giri≈ü √ºst√ºnlikli amala a≈üyryldy!');
                onLogin(foundUser, role);
            } else {
                setStatus('Ulanyjy maglumatlary √Ωal≈ày≈ü √Ωa-da rol dogry d√§l!');
            }
        } catch (error) {
            console.error('Giri≈üde n√§sazlyk boldy:', error.response?.data || error.message);

            if (error.response && error.response.status === 401) {
                setStatus('Ulanyjy ady, famili√Ωasy √Ωa-da parol √Ωal≈ày≈ü!');
            } else {
                setStatus('Serwer bilen baglany≈üyk √Ωal≈ày≈ü!');
            }
        }
    };

    // ‚¨áÔ∏è Komponenti≈à G√∂r√ºn≈üi (Render)
    return (
        <div className="page-container">
            <div className="login-box">
                <div className="logo">
                    <img
                        src="https://cdn-icons-png.flaticon.com/512/847/847969.png"
                        alt="School Logo"
                    />
                </div>
                {/* Rol d√ºwmeleri */}
                <div className="role-buttons">
                    <button
                        className={`role-button ${role === 'student' ? 'active' : ''}`}
                        onClick={() => handleRoleChange('student')}
                    >
                        Talyp
                    </button>
                    <button
                        className={`role-button ${role === 'teacher' ? 'active' : ''}`}
                        onClick={() => handleRoleChange('teacher')}
                    >
                        Mugallym
                    </button>
                </div>

                {/* Giri≈ü me√Ωdanlary */}
                {role && (
                    <div className="inputs">
                        <div className="input-group">
                            <label className={username ? 'filled' : ''}>Ady</label>
                            <input
                                type="text"
                                value={username}
                                onChange={(e) => setUsername(e.target.value)}
                                required
                            />
                        </div>
                        <div className="input-group">
                            <label className={surname ? 'filled' : ''}>Famili√Ωasy</label>
                            <input
                                type="text"
                                value={surname}
                                onChange={(e) => setLastName(e.target.value)}
                                required
                            />
                        </div>

                        {/* üîë PAROL ME√ùDAN√áASY */}
                        <div className="input-group">
                            <label className={password ? 'filled' : ''}>Parol</label>
                            <input
                                type={showPassword ? 'text' : 'password'}
                                value={password}
                                onChange={(e) => setPassword(e.target.value)}
                                required
                            />
                        </div>

                        {/* ‚ùóÔ∏è PAROLY G√ñRKZE/GIZLE D√úWMESI (indi parol inputyny≈à a≈üagynda) */}
                        <button
                            type="button"
                            className="toggle-password-button"
                            onClick={togglePasswordVisibility}
                            style={togglePasswordStyle} // üëà T√§ze G√ñNI CSS berildi
                            aria-label={showPassword ? 'Paroly gizle' : 'Paroly g√∂rkez'}
                        >
                            {/* Has gowja g√∂r√ºnmek √º√ßin tekst we simwol */}
                            {showPassword ? 'üëÅÔ∏è Paroly Gizle' : 'üîí Paroly G√∂rkez'}
                        </button>


                        {role === 'student' && (
                            <div className="input-group">
                                <label className={group_number ? 'filled' : ''}>Topar</label>
                                <input
                                    type="text"
                                    value={group_number}
                                    onChange={(e) => setGroup(e.target.value)}
                                    required
                                />
                            </div>
                        )}
                        <button className="login-button" onClick={handleLogin}>
                            Giri≈ü et
                        </button>
                    </div>
                )}
                {/* Status habary */}
                {status && <p className="status-message">{status}</p>}
            </div>
        </div>
    );
}

export default Login;